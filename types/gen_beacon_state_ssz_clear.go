// Code generated by github.com/karalabe/ssz. DO NOT EDIT.

package consensus_spec_tests

// ClearSSZ zeroes out all fields of BeaconState for leftover decode.
func (obj *BeaconState) ClearSSZ() {
	obj.GenesisTime = 0
	obj.GenesisValidatorsRoot = [32]byte{}
	obj.Slot = 0
	if obj.Fork != nil {
		obj.Fork.ClearSSZ()
	}
	if obj.LatestBlockHeader != nil {
		obj.LatestBlockHeader.ClearSSZ()
	}
	obj.BlockRoots = [8192][32]byte{}
	obj.StateRoots = [8192][32]byte{}
	obj.HistoricalRoots = nil
	if obj.Eth1Data != nil {
		obj.Eth1Data.ClearSSZ()
	}
	for i := range obj.Eth1DataVotes {
		if obj.Eth1DataVotes[i] != nil {
			obj.Eth1DataVotes[i].ClearSSZ()
		}
	}
	obj.Eth1DepositIndex = 0
	for i := range obj.Validators {
		if obj.Validators[i] != nil {
			obj.Validators[i].ClearSSZ()
		}
	}
	obj.Balances = nil
	obj.RandaoMixes = [65536][32]byte{}
	obj.Slashings = [8192]uint64{}
	for i := range obj.PreviousEpochAttestations {
		if obj.PreviousEpochAttestations[i] != nil {
			obj.PreviousEpochAttestations[i].ClearSSZ()
		}
	}
	for i := range obj.CurrentEpochAttestations {
		if obj.CurrentEpochAttestations[i] != nil {
			obj.CurrentEpochAttestations[i].ClearSSZ()
		}
	}
	obj.JustificationBits = [1]byte{}
	if obj.PreviousJustifiedCheckpoint != nil {
		obj.PreviousJustifiedCheckpoint.ClearSSZ()
	}
	if obj.CurrentJustifiedCheckpoint != nil {
		obj.CurrentJustifiedCheckpoint.ClearSSZ()
	}
	if obj.FinalizedCheckpoint != nil {
		obj.FinalizedCheckpoint.ClearSSZ()
	}
}
